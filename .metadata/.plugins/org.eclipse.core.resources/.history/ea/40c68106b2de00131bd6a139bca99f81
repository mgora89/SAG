import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

import edu.uci.ics.jung.graph.Graph;
import edu.uci.ics.jung.graph.SparseMultigraph;
import edu.uci.ics.jung.visualization.renderers.Renderer.Edge;


public class CellularGraphView {
    public static Graph<String, String> g;
    
    /** Creates a new instance of SimpleGraphView */
    public CellularGraphView(String inputFile) {
        // Graph<V, E> where V is the type of the vertices and E is the type of the edges
        g = new SparseMultigraph<String, String>();
        // Add some vertices. From above we defined these to be type Integer.
        try {
        	parseCells(inputFile);	
        }
        catch(Exception e)
        {
        	e.printStackTrace();
        }
        
//        g.addVertex("1");
//        g.addVertex("2");
//        g.addVertex("3"); 
//        g.addVertex("4"); 
        // Note that the default is for undirected edges, our Edges are Strings.
//        g.addEdge("Edge-A", "1", "2"); // Note that Java 1.5 auto-boxes primitives
//        g.addEdge("Edge-B", "2", "3");  
    }
	private void parseCells(String inputFile) throws FileNotFoundException
	{
			Scanner sc = new Scanner(new File(inputFile));
			List<String> lines = new ArrayList<String>();
			while (sc.hasNextLine()) {
			  lines.add(sc.nextLine());
			}

			String[] arr = lines.toArray(new String[0]);
			// add vertices
			for(String a:arr)
			{
				String[] splitted = a.split(" ");
				g.addVertex(splitted[0]);
				
			}
			// add edges
			for(String a:arr)
			{
				String[] splitted = a.split(" ");
				for(int i=0; i< splitted.length)
				
				g.addEdge(splitted[0]-B", "2", "3"); 
			}
			
	}
    
}